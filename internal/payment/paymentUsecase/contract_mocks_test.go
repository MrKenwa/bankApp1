// Code generated by MockGen. DO NOT EDIT.
// Source: interfaces.go
//
// Generated by this command:
//
//	mockgen -source interfaces.go -destination contract_mocks_test.go -package paymentUsecase
//

// Package paymentUsecase is a generated GoMock package.
package paymentUsecase

import (
	models "bankApp1/internal/models"
	context "context"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockBalanceUC is a mock of BalanceUC interface.
type MockBalanceUC struct {
	ctrl     *gomock.Controller
	recorder *MockBalanceUCMockRecorder
	isgomock struct{}
}

// MockBalanceUCMockRecorder is the mock recorder for MockBalanceUC.
type MockBalanceUCMockRecorder struct {
	mock *MockBalanceUC
}

// NewMockBalanceUC creates a new mock instance.
func NewMockBalanceUC(ctrl *gomock.Controller) *MockBalanceUC {
	mock := &MockBalanceUC{ctrl: ctrl}
	mock.recorder = &MockBalanceUCMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBalanceUC) EXPECT() *MockBalanceUCMockRecorder {
	return m.recorder
}

// Decrease mocks base method.
func (m *MockBalanceUC) Decrease(arg0 context.Context, arg1 models.BalanceFilter, arg2 int64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Decrease", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// Decrease indicates an expected call of Decrease.
func (mr *MockBalanceUCMockRecorder) Decrease(arg0, arg1, arg2 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Decrease", reflect.TypeOf((*MockBalanceUC)(nil).Decrease), arg0, arg1, arg2)
}

// Get mocks base method.
func (m *MockBalanceUC) Get(arg0 context.Context, arg1 models.BalanceFilter) (models.Balance, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0, arg1)
	ret0, _ := ret[0].(models.Balance)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockBalanceUCMockRecorder) Get(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockBalanceUC)(nil).Get), arg0, arg1)
}

// Increase mocks base method.
func (m *MockBalanceUC) Increase(arg0 context.Context, arg1 models.BalanceFilter, arg2 int64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Increase", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// Increase indicates an expected call of Increase.
func (mr *MockBalanceUCMockRecorder) Increase(arg0, arg1, arg2 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Increase", reflect.TypeOf((*MockBalanceUC)(nil).Increase), arg0, arg1, arg2)
}

// MockCardsUC is a mock of CardsUC interface.
type MockCardsUC struct {
	ctrl     *gomock.Controller
	recorder *MockCardsUCMockRecorder
	isgomock struct{}
}

// MockCardsUCMockRecorder is the mock recorder for MockCardsUC.
type MockCardsUCMockRecorder struct {
	mock *MockCardsUC
}

// NewMockCardsUC creates a new mock instance.
func NewMockCardsUC(ctrl *gomock.Controller) *MockCardsUC {
	mock := &MockCardsUC{ctrl: ctrl}
	mock.recorder = &MockCardsUCMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCardsUC) EXPECT() *MockCardsUCMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockCardsUC) Get(arg0 context.Context, arg1 models.CardFilter) (models.Card, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0, arg1)
	ret0, _ := ret[0].(models.Card)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockCardsUCMockRecorder) Get(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockCardsUC)(nil).Get), arg0, arg1)
}

// MockDepositsUC is a mock of DepositsUC interface.
type MockDepositsUC struct {
	ctrl     *gomock.Controller
	recorder *MockDepositsUCMockRecorder
	isgomock struct{}
}

// MockDepositsUCMockRecorder is the mock recorder for MockDepositsUC.
type MockDepositsUCMockRecorder struct {
	mock *MockDepositsUC
}

// NewMockDepositsUC creates a new mock instance.
func NewMockDepositsUC(ctrl *gomock.Controller) *MockDepositsUC {
	mock := &MockDepositsUC{ctrl: ctrl}
	mock.recorder = &MockDepositsUCMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDepositsUC) EXPECT() *MockDepositsUCMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockDepositsUC) Get(arg0 context.Context, arg1 models.DepositFilter) (models.Deposit, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0, arg1)
	ret0, _ := ret[0].(models.Deposit)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockDepositsUCMockRecorder) Get(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockDepositsUC)(nil).Get), arg0, arg1)
}

// MockOperationRepo is a mock of OperationRepo interface.
type MockOperationRepo struct {
	ctrl     *gomock.Controller
	recorder *MockOperationRepoMockRecorder
	isgomock struct{}
}

// MockOperationRepoMockRecorder is the mock recorder for MockOperationRepo.
type MockOperationRepoMockRecorder struct {
	mock *MockOperationRepo
}

// NewMockOperationRepo creates a new mock instance.
func NewMockOperationRepo(ctrl *gomock.Controller) *MockOperationRepo {
	mock := &MockOperationRepo{ctrl: ctrl}
	mock.recorder = &MockOperationRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockOperationRepo) EXPECT() *MockOperationRepoMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockOperationRepo) Create(arg0 context.Context, arg1 models.Operation) (models.OperationID, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0, arg1)
	ret0, _ := ret[0].(models.OperationID)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockOperationRepoMockRecorder) Create(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockOperationRepo)(nil).Create), arg0, arg1)
}
